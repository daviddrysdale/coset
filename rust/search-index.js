var searchIndex = JSON.parse('{\
"coset":{"doc":"Set of types for supporting CBOR Object Signing and …","t":"GINNNIGDNDNDDEDDDDDDNDNDDDDDDNDDDNDNNNNNEDNDDNNGGEENENDDNDNEEGEDDSINNNNNNLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLMALMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMMMLLMFLLLLLLLLLLLLLLLLLLLMMLLMMLMLLLLMLLLLLLMMMMLLLLLLLLLMMMMMMMMMMMMMFLLMMMLLLMMLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLGDDNENLMLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLMLMLLMLMLMLLLLLLLLLLLLLLNNNNNNNNNNNNNNNNNNRNNNENNNRNNNENNENNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNRNNNNNNENNNENINNNNNRNNNNNNNEEENNNNNNNNENEENNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNEINNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Algorithm","AsCborValue","Assigned","Assigned","Bytes","CborSerializable","ContentType","CoseEncrypt","CoseEncrypt","CoseEncrypt0","CoseEncrypt0","CoseEncrypt0Builder","CoseEncryptBuilder","CoseError","CoseKdfContext","CoseKdfContextBuilder","CoseKey","CoseKeyBuilder","CoseKeySet","CoseMac","CoseMac","CoseMac0","CoseMac0","CoseMac0Builder","CoseMacBuilder","CoseRecipient","CoseRecipientBuilder","CoseSign","CoseSign1","CoseSign1","CoseSign1Builder","CoseSignBuilder","CoseSignature","CoseSignature","CoseSignatureBuilder","CounterSignature","DecodeFailed","DuplicateMapKey","EncRecipient","EncodeFailed","EncryptionContext","EndOfFile","ExtraneousData","Header","HeaderBuilder","Int","Integer","KeyOperation","KeyType","Label","MacContext","MacRecipient","Nonce","OutOfRangeIntegerValue","PartyInfo","PartyInfoBuilder","PrivateUse","ProtectedHeader","RecRecipient","RegisteredLabel","RegisteredLabelWithPrivate","Result","SignatureContext","SuppPubInfo","SuppPubInfoBuilder","TAG","TaggedCborSerializable","Text","Text","Text","UnexpectedItem","UnregisteredIanaNonPrivateValue","UnregisteredIanaValue","add_counter_signature","add_created_signature","add_critical","add_critical_label","add_detached_signature","add_key_op","add_recipient","add_recipient","add_recipient","add_signature","add_supp_priv_info","alg","alg","algorithm","algorithm","algorithm","base_iv","base_iv","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","cbor","cbor_bstr","ciphertext","ciphertext","ciphertext","ciphertext","ciphertext","ciphertext","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","content_format","content_type","content_type","counter_signatures","create_ciphertext","create_ciphertext","create_ciphertext","create_detached_signature","create_signature","create_tag","create_tag","crit","cwt","decrypt","decrypt","decrypt","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","enc_structure_data","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_cbor_bstr","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_cbor_value","from_slice","from_slice","from_tagged_slice","from_tagged_slice","header","iana","identity","identity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_empty","iv","iv","key_data_length","key_data_length","key_id","key_id","key_id","key_id","key_ops","key_type","kty","kty","mac_structure_data","new","new","new","new","new","new","new","new","new","new","new","new","new","new_ec2_priv_key","new_ec2_pub_key","new_ec2_pub_key_y_sign","new_okp_key","new_symmetric_key","nonce","nonce","original_data","other","other","other","other","param","params","partial_cmp","partial_cmp","partial_cmp","partial_iv","partial_iv","party_u_info","party_v_info","payload","payload","payload","payload","payload","payload","payload","payload","protected","protected","protected","protected","protected","protected","protected","protected","protected","protected","protected","protected","protected","protected","protected","protected","protected","protected","recipients","recipients","recipients","rest","sig_structure_data","signature","signature","signature","signature","signatures","supp_pub_info","tag","tag","tag","tag","text_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_cbor_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_tagged_vec","to_tagged_vec","to_vec","to_vec","try_add_created_signature","try_add_detached_signature","try_create_ciphertext","try_create_ciphertext","try_create_ciphertext","try_create_detached_signature","try_create_signature","try_create_tag","try_create_tag","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","unprotected","value","verify_detached_signature","verify_detached_signature","verify_signature","verify_signature","verify_tag","verify_tag","ClaimName","ClaimsSet","ClaimsSetBuilder","FractionalSeconds","Timestamp","WholeSeconds","audience","audience","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","claim","clone","clone","clone_into","clone_into","cwt_id","cwt_id","default","default","eq","eq","expiration_time","expiration_time","fmt","fmt","from","from","from","from_cbor_value","from_cbor_value","into","into","into","issued_at","issued_at","issuer","issuer","new","not_before","not_before","private_claim","rest","subject","subject","text_claim","to_cbor_value","to_cbor_value","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","A128GCM","A128KW","A192GCM","A192KW","A256GCM","A256KW","AES_CCM_16_128_128","AES_CCM_16_128_256","AES_CCM_16_64_128","AES_CCM_16_64_256","AES_CCM_64_128_128","AES_CCM_64_128_256","AES_CCM_64_64_128","AES_CCM_64_64_256","AES_MAC_128_128","AES_MAC_128_64","AES_MAC_256_128","AES_MAC_256_64","ALGORITHM_PRIVATE_USE_MAX","AceProfile","Alg","Alg","Algorithm","Aud","BaseIv","CNonce","CWT_CLAIM_PRIVATE_USE_MAX","Cbor","CborDeflate","CborSeq","CborTag","ChaCha20Poly1305","Cnf","CoapContentFormat","CoapGroupJson","ContentType","CoseEncrypt","CoseEncrypt","CoseEncrypt0","CoseEncrypt0","CoseKey","CoseKeySet","CoseMac","CoseMac","CoseMac0","CoseMac0","CoseSign","CoseSign","CoseSign1","CoseSign1","CounterSignature","CounterSignature0","Crit","Crv","Crv","Csrattrs","Cti","CuphNonce","CuphOwnerPubKey","Cwt","Cwt","CwtClaimName","D","D","D","DI","DP","DQ","Decrypt","DeriveBits","DeriveKey","Direct","Direct_HKDF_AES_128","Direct_HKDF_AES_256","Direct_HKDF_SHA_256","Direct_HKDF_SHA_512","DotsCbor","E","EC2","ECDH_ES_A128KW","ECDH_ES_A192KW","ECDH_ES_A256KW","ECDH_ES_HKDF_256","ECDH_ES_HKDF_512","ECDH_SS_A128KW","ECDH_SS_A192KW","ECDH_SS_A256KW","ECDH_SS_HKDF_256","ECDH_SS_HKDF_512","ELLIPTIC_CURVE_PRIVATE_USE_MAX","ES256","ES256K","ES384","ES512","EatFido","EatMaroePrefix","Ec2KeyParameter","Ed25519","Ed448","EdDSA","EllipticCurve","Encrypt","EnumI64","EphemeralKey","EuphNonce","Exi","Exi","Exp","HEADER_PARAMETER_PRIVATE_USE_MAX","HMAC_256_256","HMAC_256_64","HMAC_384_384","HMAC_512_512","HSS_LMS","HSS_LMS","Hcert","HeaderAlgorithmParameter","HeaderParameter","HssLmsKeyParameter","IV_GENERATION","Iat","Iss","Iv","Json","JsonDeflate","JsonPatchJson","K","KeyOperation","KeyOps","KeyParameter","KeyType","Kid","Kid","KidContext","Kty","LinkFormat","MacCreate","MacVerify","Matrix1","Matrix2","MergePatchJson","MultipartCore","N","N","Nbf","OKP","OctetStream","OkpKeyParameter","Oscore","Other","P","PS256","PS384","PS512","P_256","P_384","P_521","PartialIv","PartyUIdentity","PartyUNonce","PartyUOther","PartyVIdentity","PartyVNonce","PartyVOther","Permutation1","Pkcs10","Pkcs7MimeSmimeTypeCertsOnly","Pkcs7MimeSmimeTypeCmcRequest","Pkcs7MimeSmimeTypeCmcResponse","Pkcs7MimeSmimeTypeServerGeneratedKey","Pkcs8","PkixCert","Pub","Q","Q","QInv","RI","RS1","RS256","RS384","RS512","RSA","RSAES_OAEP_RFC_8017_default","RSAES_OAEP_SHA_256","RSAES_OAEP_SHA_512","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","RsaKeyParameter","SHAKE128","SHAKE256","SHA_1","SHA_256","SHA_256_64","SHA_384","SHA_512","SHA_512_256","Salt","Scope","Secp256k1","SenmlCbor","SenmlEtchCbor","SenmlEtchJson","SenmlExi","SenmlJson","SenmlXml","SensmlCbor","SensmlExi","SensmlJson","SensmlXml","Sign","StaticKey","StaticKeyId","Sub","Symmetric","SymmetricKeyParameter","TI","TValues","TdJson","TextPlainUtf8","UnwrapKey","Verify","VndOcfCbor","VndOmaLwm2mCbor","VndOmaLwm2mJson","VndOmaLwm2mTlv","WalnutDSA","WalnutDSA","WalnutDsaKeyParameter","WithPrivateRange","WrapKey","X","X","X25519","X448","X5Bag","X5Chain","X5T","X5U","Xml","Y","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_private","is_private","is_private","is_private","is_private","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"coset"],[721,"coset::cwt"],[784,"coset::iana"]],"d":["Algorithm identifier.","Trait for types that can be converted to/from a <code>Value</code>.","","","","Extension trait that adds serialization/deserialization …","Content type.","Structure representing an encrypted object.","","Structure representing an encrypted object.","","Builder for <code>CoseEncrypt0</code> objects.","Builder for <code>CoseEncrypt</code> objects.","Error type for failures in encoding or decoding COSE types.","Structure representing a a key derivation context.","Builder for <code>CoseKdfContext</code> objects.","Structure representing a cryptographic key.","Builder for <code>CoseKey</code> objects.","A collection of <code>CoseKey</code> objects.","Structure representing a message with authentication code …","","Structure representing a message with authentication code …","","Builder for <code>CoseMac0</code> objects.","Builder for <code>CoseMac</code> objects.","Structure representing the recipient of encrypted data.","Builder for <code>CoseRecipient</code> objects.","Signed payload with signatures.","Signed payload with a single signature.","","Builder for <code>CoseSign1</code> objects.","Builder for <code>CoseSign</code> objects.","Structure representing a cryptographic signature.","","Builder for <code>CoseSignature</code> objects.","","CBOR decoding failure.","Duplicate map key detected.","","CBOR encoding failure.","Possible encryption contexts.","Marker structure indicating that the EOF was encountered …","CBOR input had extra data.","Structure representing a common COSE header map.","Builder for <code>Header</code> objects.","","","Key operation.","Key type.","A COSE label may be either a signed integer value or a …","Possible MAC contexts.","","A nonce value.","Integer value on the wire is outside the range of integers …","Structure representing a party involved in key derivation.","Builder for <code>PartyInfo</code> objects.","","Structure representing a protected COSE header map.","","A COSE label which can be either a signed integer value or …","A COSE label which can be either a signed integer value or …","Crate-specific Result type","Possible signature contexts.","Structure representing supplemental public information.","Builder for <code>SuppPubInfo</code> objects.","The associated tag value.","Extension trait that adds tagged …","","","","Unexpected CBOR item encountered (got, want).","Unrecognized value in neither IANA-controlled range nor …","Unrecognized value in IANA-controlled range (with no …","Add a counter signature.","Calculate the signature value, using <code>signer</code> to generate …","Add a critical header.","Add a critical header.","Calculate the signature value for a detached payload, …","Add a key operation.","Add a <code>CoseRecipient</code>.","Add a <code>CoseRecipient</code>.","Add a <code>CoseRecipient</code>.","Add a signature value.","Add supplemental private info.","Cryptographic algorithm to use","Key use restriction to this algorithm.","Set the algorithm.","Set the algorithm.","Set the algorithm.","Set the associated field.","Base IV to be xor-ed with partial IVs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the completed object.","Build the completed object.","Build the completed object.","Build the completed object.","Build the completed object.","Build the completed object.","Build the completed object.","Build the completed object.","Build the completed object.","Build the completed object.","Build the completed object.","Build the completed object.","Build the completed object.","Re-export of the <code>ciborium</code> crate used for underlying CBOR …","Convert this header to a <code>bstr</code> encoded map, as a <code>Value</code>, …","Set the associated field.","Set the associated field.","Set the associated field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the content type to a numeric value.","Set the content type to a text value.","Content type of the payload","Counter signature","Calculate the ciphertext value with an AEAD, using <code>cipher</code> …","Calculate the ciphertext value with an AEAD, using <code>cipher</code> …","Calculate the ciphertext value with an AEAD, using <code>cipher</code> …","Calculate the signature value for a detached payload, …","Calculate the signature value, using <code>signer</code> to generate …","Calculate the tag value, using <code>mac</code>. Any protected header …","Calculate the tag value, using <code>mac</code>. Any protected header …","Critical headers to be understood","CBOR Web Token functionality.","Decrypt the <code>ciphertext</code> value with an AEAD, using <code>cipher</code> to …","Decrypt the <code>ciphertext</code> value with an AEAD, using <code>cipher</code> to …","Decrypt the <code>ciphertext</code> value with an AEAD, using <code>cipher</code> to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a binary blob that will be signed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructor from a <code>Value</code> that holds a <code>bstr</code> encoded header.","Convert a <code>Value</code> into an instance of the type.","","","","","","","","","","","","","","","","","","","Create an object instance from serialized CBOR data in a …","Create an object instance from serialized CBOR data in a …","Create an object instance from serialized CBOR data in a …","Create an object instance from serialized CBOR data in a …","Parsed header information.","Enumerations for IANA-managed values.","Set the associated field.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicate whether the <code>Header</code> is empty.","Indicate whether the <code>ProtectedHeader</code> is empty.","Set the IV, and clear any partial IV already set.","Full initialization vector","Set the associated field.","","Set the associated field.","Set the associated field.","Key identifier.","Key identification.","Restrict set of possible operations.","Set the key type.","Set the associated field.","Key type identification.","Create a binary blob that will be signed.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for builder.","Constructor for an elliptic curve private key specified by …","Constructor for an elliptic curve public key specified by <code>x</code>…","Constructor for an elliptic curve public key specified by <code>x</code>…","Constructor for a octet keypair key.","Constructor for a symmetric key specified by <code>k</code>.","Set the associated field.","","If this structure was created by parsing serialized data, …","Set the associated field.","Set the associated field.","","","Set a parameter value.","Any additional parameter (label,value) pairs.  If …","","","","Set the partial IV, and clear any IV already set.","Partial initialization vector","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","","","","","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","","","","","","","","","","","","","Any additional header (label,value) pairs.  If duplicate …","Create a binary blob that will be signed.","Set the associated field.","Set the associated field.","","","","Set the associated field.","Set the associated field.","Set the associated field.","","","Set a header label:value pair where the <code>label</code> is text.","Convert the object into a <code>Value</code>, consuming it along the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize this object to a vector, including initial tag, …","Serialize this object to a vector, including initial tag, …","Serialize this object to a vector, consuming it along the …","Serialize this object to a vector, consuming it along the …","Calculate the signature value, using <code>signer</code> to generate …","Calculate the signature value for a detached payload, …","Calculate the ciphertext value with an AEAD, using <code>cipher</code> …","Calculate the ciphertext value with an AEAD, using <code>cipher</code> …","Calculate the ciphertext value with an AEAD, using <code>cipher</code> …","Calculate the signature value for a detached payload, …","Calculate the signature value, using <code>signer</code> to generate …","Calculate the tag value, using <code>mac</code>. Any protected header …","Calculate the tag value, using <code>mac</code>. Any protected header …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","Set the associated field.","","","","","","","","","Set a header label:value pair. If duplicate labels are …","Verify the indicated signature value for a detached …","Verify the indicated signature value for a detached …","Verify the indicated signature value, using <code>verifier</code> on …","Verify the signature value, using <code>verifier</code> on the …","Verify the <code>tag</code> value using the provided <code>mac</code> function, …","Verify the <code>tag</code> value using the provided <code>mac</code> function, …","Claim name.","Structure representing a CWT Claims Set.","Builder for <code>ClaimsSet</code> objects.","","Number of seconds since UNIX epoch.","","Set the associated field.","Audience","","","","","","","Build the completed object.","Set a claim name:value pair.","","","","","Set the associated field.","CWT ID","","","","","Set the associated field.","Expiration Time","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set the associated field.","Issued At","Set the associated field.","Issuer","Constructor for builder.","Set the associated field.","Not Before","Set a claim  where the claim key is a numeric value from …","Any additional claims.","Set the associated field.","Subject","Set a claim name:value pair where the <code>name</code> is text.","","","","","","","","","","","","","","AES-GCM mode w/ 128-bit key, 128-bit tag","AES Key Wrap w/ 128-bit key","AES-GCM mode w/ 192-bit key, 128-bit tag","AES Key Wrap w/ 192-bit key","AES-GCM mode w/ 256-bit key, 128-bit tag","AES Key Wrap w/ 256-bit key","AES-CCM mode 128-bit key, 128-bit tag, 13-byte nonce","AES-CCM mode 256-bit key, 128-bit tag, 13-byte nonce","AES-CCM mode 128-bit key, 64-bit tag, 13-byte nonce","AES-CCM mode 256-bit key, 64-bit tag, 13-byte nonce","AES-CCM mode 128-bit key, 128-bit tag, 7-byte nonce","AES-CCM mode 256-bit key, 128-bit tag, 7-byte nonce","AES-CCM mode 128-bit key, 64-bit tag, 7-byte nonce","AES-CCM mode 256-bit key, 64-bit tag, 7-byte nonce","AES-MAC 128-bit key, 128-bit tag","AES-MAC 128-bit key, 64-bit tag","AES-MAC 256-bit key, 128-bit tag","AES-MAC 256-bit key, 64-bit tag","Integer values for COSE algorithms below this value are …","The ACE profile a token is supposed to be used with (“…","Cryptographic algorithm to use","Key usage restriction to this algorithm","IANA-registered COSE algorithms.","Audience (“aud”: tstr)","Base IV to be XORed with Partial IVs","The client-nonce sent to the AS by the RS via the client (…","Integer values for CWT claims below this value are …","application/cbor","","application/cbor-seq","CBOR tag values for COSE structures.","ChaCha20/Poly1305 w/ 256-bit key, 128-bit tag","Confirmation (“cnf”: map)","CoAP Content Formats","application/coap-group+json","Content type of the payload","COSE Encrypted Data Object","application/cose; cose-type=“cose-encrypt”","COSE Single Recipient Encrypted Data Object","application/cose; cose-type=“cose-encrypt0”","application/cose-key","application/cose-key-set","COSE MACed Data Object","application/cose; cose-type=“cose-mac”","COSE Mac w/o Recipients Object","application/cose; cose-type=“cose-mac0”","COSE Signed Data Object","application/cose; cose-type=“cose-sign”","COSE Single Signer Data Object","application/cose; cose-type=“cose-sign1”","CBOR-encoded signature structure","Counter signature with implied signer and headers","Critical headers to be understood","EC identifier - Taken from the “COSE Elliptic Curves” …","EC identifier - Taken from the “COSE Elliptic Curves” …","application/csrattrs","CWT ID (“cti”: bstr)","Challenge Nonce","Public Key","CBOR Web Token (CWT)","application/cwt","CBOR Web Token (CWT) Claims From IANA registry …","Private key","Private key","The RSA private exponent d","d_i = d mod (r_i - 1)","dP is d mod (p - 1)","dQ is d mod (q - 1)","Key is used for key transport decryption. Requires private …","Key is used for deriving bits not to be used as a key.  …","Key is used for deriving keys.  Requires private key …","Direct use of CEK","Shared secret w/ AES-MAC 128-bit key","Shared secret w/ AES-MAC 256-bit key","Shared secret w/ HKDF and SHA-256","Shared secret w/ HKDF and SHA-512","application/dots+cbor","The RSA public exponent e","Elliptic Curve Keys w/ x- and y-coordinate pair","ECDH ES w/ Concat KDF and AES Key Wrap w/ 128-bit key","ECDH ES w/ Concat KDF and AES Key Wrap w/ 192-bit key","ECDH ES w/ Concat KDF and AES Key Wrap w/ 256-bit key","ECDH ES w/ HKDF - generate key directly","ECDH ES w/ HKDF - generate key directly","ECDH SS w/ Concat KDF and AES Key Wrap w/ 128-bit key","ECDH SS w/ Concat KDF and AES Key Wrap w/ 192-bit key","ECDH SS w/ Concat KDF and AES Key Wrap w/ 256-bit key","ECDH SS w/ HKDF - generate key directly","ECDH SS w/ HKDF - generate key directly","Integer values for COSE elliptic curves below this value …","ECDSA w/ SHA-256","ECDSA using secp256k1 curve and SHA-256","ECDSA w/ SHA-384","ECDSA w/ SHA-512","FIDO Device Onboarding EAT (“EAT-FDO”: array).","Signing prefix for multi-app restricted operating …","IANA-registered COSE key parameters for keys of type …","OKP: Ed25519 for use w/ EdDSA only","OKP: Ed448 for use w/ EdDSA only","EdDSA","IANA-registered COSE elliptic curves.","Key is used for key transport encryption.","Trait indicating an enum that can be constructed from <code>i64</code> …","Ephemeral public key for the sender","Challenge nonce (“EUPHNonce”: bstr).","application/exi","The expiration time of a token measured from when it was …","Expiration Time, as seconds since UNIX epoch (“exp”: …","Integer values for COSE header parameters below this value …","HMAC w/ SHA-256","HMAC w/ SHA-256 truncated to 64 bits","HMAC w/ SHA-384","HMAC w/ SHA-512","HSS/LMS hash-based digital signature","Public key for HSS/LMS hash-based digital signature","Health certificate (“hcert”: map).","IANA-registered COSE header algorithm parameters.","IANA-registered COSE header parameters.","IANA-registered COSE key parameters for keys of type …","For doing IV generation for symmetric algorithms.","Issued at, as seconds since UNIX epoch (“iat”: …","Issuer (“iss”: tstr).","Full Initialization Vector","application/json","","application/json-patch+json","Key Value","Key operation values.","Restrict set of permissible operations","IANA-registered COSE common key parameters.","IANA-registered COSE key types.","Key identifier","Key identification value - match to kid in message","Identifies the context for the key identifier","Identification of the key type","application/link-format","Key is used for creating MACs.","Key is used for validating MACs.","NxN Matrix of enties in F_q in column-major form","NxN Matrix of enties in F_q in column-major form","application/merge-patch+json","application/multipart-core","The RSA modulus n","Group and Matrix (NxN) size","Not Before, as seconds since UNIX epoch (“nbf”: …","Octet Key Pair","application/octet-stream","IANA-registered COSE key parameters for keys of type …","application/oscore","Other prime infos, an array","The prime factor p of n","RSASSA-PSS w/ SHA-256","RSASSA-PSS_SHA-384","RSASSA-PSS w/ SHA-512","EC2: NIST P-256 also known as secp256r1","EC2: NIST P-384 also known as secp384r1","EC2: NIST P-521 also known as secp521r1","Partial Initialization Vector","Party U identity information","Party U provided nonce","Party U other provided information","Party V identity information","Party V provided nonce","Party V other provided information","Permutation associated with matrix 1","application/pkcs10","application/pkcs7-mime; smime-type=certs-only","application/pkcs7-mime; smime-type=CMC-Request","application/pkcs7-mime; smime-type=CMC-Response","application/pkcs7-mime; smime-type=server-generated-key","application/pkcs8","application/pkix-cert","Public key for HSS/LMS hash-based digital signature","The prime factor q of n","Finite field F_q","qInv is the CRT coefficient q^(-1) mod p","a prime factor r_i of n, where i &gt;= 3","RSASSA-PKCS1-v1_5 using SHA-1","RSASSA-PKCS1-v1_5 using SHA-256","RSASSA-PKCS1-v1_5 using SHA-384","RSASSA-PKCS1-v1_5 using SHA-512","RSA Key","RSAES-OAEP w/ SHA-1","RSAES-OAEP w/ SHA-256","RSAES-OAEP w/ SHA-512","Reserved","Reserved","Reserved value.","This value is reserved","","Reserved value.","IANA-registered COSE key parameters for keys of type …","SHAKE-128 256-bit Hash Value","SHAKE-256 512-bit Hash Value","SHA-1 Hash","SHA-2 256-bit Hash","SHA-2 256-bit Hash truncated to 64-bits","SHA-2 384-bit Hash","SHA-2 512-bit Hash","SHA-2 512-bit Hash truncated to 256-bits","Random salt","Scope of an access token (“scope”: bstr/tstr)","EC2: SECG secp256k1 curve","application/senml+cbor","application/senml-etch+cbor","application/senml-etch+json","application/senml-exi","application/senml+json","application/senml+xml","application/sensml+cbor","application/sensml-exi","application/sensml+json","application/sensml+xml","Key is used to create signatures. Requires private key …","Static public key for the sender","Static public key identifier for the sender","Subject (“sub”: tstr)","Symmetric Keys","IANA-registered COSE key parameters for keys of type …","The CRT coefficient t_i = (r_1 * r_2 * … * r_(i-1))^(-1) …","List of T-values, enties in F_q","application/td+json","text/plain; charset=utf-8","Key is used for key wrap decryption.  Requires private key …","Key is used for verification of signatures.","application/vnd.ocf+cbor","application/vnd.oma.lwm2m+cbor","application/vnd.oma.lwm2m+json","application/vnd.oma.lwm2m+tlv","WalnutDSA signature","WalnutDSA public key","IANA-registered COSE key parameters for keys of type …","Trait indicating an enum with a range of private values.","Key is used for key wrap encryption.","x-coordinate","Public Key","OKP: X25519 for use w/ ECDH only","OKP: X448 for use w/ ECDH only","An unordered bag of X.509 certificates","An ordered chain of X.509 certificates","Hash of an X.509 certificate","URI pointing to an X.509 certificate","application/xml","y-coordinate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,8,42,43,0,0,0,44,0,44,0,0,0,0,0,0,0,0,0,46,0,46,0,0,0,0,0,0,47,0,0,0,47,0,47,55,55,44,55,0,0,55,0,0,38,43,0,0,0,0,44,0,55,0,0,42,0,44,0,0,0,0,0,0,84,0,38,8,42,55,55,55,1,3,1,1,3,9,11,13,14,3,15,26,27,15,1,9,9,27,55,58,38,8,42,43,19,18,21,20,22,15,12,11,23,13,25,24,44,26,1,35,45,27,9,28,14,30,29,46,2,31,32,3,34,33,47,55,58,38,8,42,43,19,18,21,20,22,15,12,11,23,13,25,24,44,26,1,35,45,27,9,28,14,30,29,46,2,31,32,3,34,33,47,18,20,15,11,13,24,1,9,14,29,31,3,33,0,35,11,13,24,12,23,25,38,8,42,43,19,21,22,12,23,25,44,26,35,45,27,28,30,46,2,32,34,47,38,8,42,43,19,21,22,12,23,25,44,26,35,45,27,28,30,46,2,32,34,47,38,8,42,1,1,26,26,11,13,24,33,33,14,29,26,0,12,23,25,51,52,19,18,21,20,22,15,12,11,23,13,25,24,26,1,35,45,27,9,28,14,30,29,2,31,32,3,34,33,0,38,8,42,43,19,21,22,12,23,25,26,35,45,27,28,30,2,32,34,55,55,58,38,8,42,43,19,18,21,20,22,15,12,11,23,13,25,24,44,26,1,35,45,27,9,28,14,30,29,46,2,31,32,3,34,33,55,55,55,55,58,38,8,42,43,19,18,21,20,22,15,12,11,23,13,25,24,44,26,1,35,45,27,9,28,14,30,29,46,2,31,32,3,34,33,47,35,85,38,8,42,19,21,22,12,23,25,26,35,45,27,28,30,2,32,34,86,86,84,84,35,0,18,19,55,58,38,8,42,43,19,18,21,20,22,15,12,11,23,13,25,24,44,26,1,35,45,27,9,28,14,30,29,46,2,31,32,3,34,33,47,26,35,1,26,20,21,1,9,26,27,27,9,9,27,0,18,20,15,11,13,24,1,9,14,29,31,3,33,9,9,9,9,9,18,19,35,18,20,19,21,9,27,38,8,42,1,26,15,15,14,29,3,33,28,30,32,34,20,11,13,24,14,29,31,3,33,21,12,23,25,28,30,2,32,34,12,23,28,26,0,31,33,2,34,32,15,14,29,28,30,1,85,38,8,42,19,21,22,12,23,25,26,35,45,27,28,30,2,32,34,38,8,42,43,19,21,22,12,23,25,44,26,35,45,27,28,30,46,2,32,34,47,55,84,84,86,86,3,3,11,13,24,33,33,14,29,55,58,38,8,42,43,19,18,21,20,22,15,12,11,23,13,25,24,44,26,1,35,45,27,9,28,14,30,29,46,2,31,32,3,34,33,47,55,58,38,8,42,43,19,18,21,20,22,15,12,11,23,13,25,24,44,26,1,35,45,27,9,28,14,30,29,46,2,31,32,3,34,33,47,55,58,38,8,42,43,19,18,21,20,22,15,12,11,23,13,25,24,44,26,1,35,45,27,9,28,14,30,29,46,2,31,32,3,34,33,47,11,13,24,14,29,31,3,33,12,23,25,28,30,2,32,34,1,32,34,32,34,28,30,0,0,0,74,0,74,71,72,74,72,71,74,72,71,71,71,74,72,74,72,71,72,72,71,74,72,71,72,74,72,74,72,71,74,72,74,72,71,71,72,71,72,71,71,72,71,72,71,72,71,74,72,74,72,74,72,71,74,72,71,74,72,71,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,73,7,76,0,73,76,73,0,49,49,49,0,17,73,0,49,7,83,49,83,49,49,49,83,49,83,49,83,49,83,49,7,7,7,77,78,49,73,7,7,83,49,0,77,78,79,79,79,79,10,10,10,17,17,17,17,17,49,79,64,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,73,73,0,65,65,17,0,10,0,75,73,49,73,73,0,17,17,17,17,17,64,73,0,0,0,17,73,73,7,49,49,49,80,0,76,0,0,7,76,7,76,49,10,10,82,82,49,49,79,82,73,64,49,0,49,79,79,17,17,17,65,65,65,7,75,75,75,75,75,75,82,49,49,49,49,49,49,49,81,79,82,79,79,17,17,17,17,64,17,17,17,7,17,76,64,65,73,0,17,17,17,17,17,17,17,17,75,73,65,49,49,49,49,49,49,49,49,49,49,10,75,75,73,64,0,79,82,49,49,10,10,49,49,49,49,17,64,0,0,10,77,78,65,65,7,7,7,7,49,78,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,40,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,41,7,17,65,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,40,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73,7,75,17,76,77,78,79,80,81,82,64,65,10,83,49,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[3,2,[5,[4]],6],3],[[1,7],1],[[1,[8,[7]]],1],[[3,2,[5,[4]],[5,[4]],6],3],[[9,10],9],[[11,12],11],[[13,12],13],[[14,12],14],[[3,2],3],[[15,[16,[4]]],15],0,0,[[15,17],15],[[1,17],1],[[9,17],9],[[9,[16,[4]]],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,19],[20,21],[15,22],[11,12],[13,23],[24,25],[1,26],[9,27],[14,28],[29,30],[31,2],[3,32],[33,34],0,[35,[[37,[36]]]],[[11,[16,[4]]],11],[[13,[16,[4]]],13],[[24,[16,[4]]],24],0,0,0,[38,38],[[[8,[[0,[39,40]]]]],[[8,[[0,[39,40]]]]]],[[[42,[[0,[39,40,41]]]]],[[42,[[0,[39,40,41]]]]]],[43,43],[19,19],[21,21],[22,22],[12,12],[23,23],[25,25],[44,44],[26,26],[35,35],[45,45],[27,27],[28,28],[30,30],[46,46],[2,2],[32,32],[34,34],[47,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[38,38],48],[[[8,[40]],[8,[40]]],48],[[[42,[[0,[40,41]]]],[42,[[0,[40,41]]]]],48],[[1,49],1],[[1,50],1],0,0,[[11,44,[5,[4]],[5,[4]],6],11],[[13,[5,[4]],[5,[4]],6],13],[[24,[5,[4]],[5,[4]],6],24],[[33,[5,[4]],[5,[4]],6],33],[[33,[5,[4]],6],33],[[14,[5,[4]],6],14],[[29,[5,[4]],6],29],0,0,[[12,44,[5,[4]],6],[[37,[[16,[4]]]]]],[[23,[5,[4]],6],[[37,[[16,[4]]]]]],[[25,[5,[4]],6],[[37,[[16,[4]]]]]],[[],51],[[],52],[[],19],[[],18],[[],21],[[],20],[[],22],[[],15],[[],12],[[],11],[[],23],[[],13],[[],25],[[],24],[[],26],[[],1],[[],35],[[],45],[[],27],[[],9],[[],28],[[],14],[[],30],[[],29],[[],2],[[],31],[[],32],[[],3],[[],34],[[],33],[[44,35,[5,[4]]],[[16,[4]]]],[[38,38],53],[[[8,[[0,[54,40]]]],[8,[[0,[54,40]]]]],53],[[[42,[[0,[54,40,41]]]],[42,[[0,[54,40,41]]]]],53],[[43,43],53],[[19,19],53],[[21,21],53],[[22,22],53],[[12,12],53],[[23,23],53],[[25,25],53],[[26,26],53],[[35,35],53],[[45,45],53],[[27,27],53],[[28,28],53],[[30,30],53],[[2,2],53],[[32,32],53],[[34,34],53],[[55,56],57],[[55,56],57],[[58,56],57],[[38,56],57],[[[8,[[0,[59,40]]]],56],57],[[[42,[[0,[59,40,41]]]],56],57],[[43,56],57],[[19,56],57],[[18,56],57],[[21,56],57],[[20,56],57],[[22,56],57],[[15,56],57],[[12,56],57],[[11,56],57],[[23,56],57],[[13,56],57],[[25,56],57],[[24,56],57],[[44,56],57],[[26,56],57],[[1,56],57],[[35,56],57],[[45,56],57],[[27,56],57],[[9,56],57],[[28,56],57],[[14,56],57],[[30,56],57],[[29,56],57],[[46,56],57],[[2,56],57],[[31,56],57],[[32,56],57],[[3,56],57],[[34,56],57],[[33,56],57],[[]],[60,55],[61,55],[62,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,[[37,[35]]]],[36,37],[36,[[37,[38]]]],[36,[[37,[[8,[40]]]]]],[36,[[37,[[42,[[0,[40,41]]]]]]]],[36,[[37,[19]]]],[36,[[37,[21]]]],[36,[[37,[22]]]],[36,[[37,[12]]]],[36,[[37,[23]]]],[36,[[37,[25]]]],[36,[[37,[26]]]],[36,[[37,[35]]]],[36,[[37,[45]]]],[36,[[37,[27]]]],[36,[[37,[28]]]],[36,[[37,[30]]]],[36,[[37,[2]]]],[36,[[37,[32]]]],[36,[[37,[34]]]],[[[5,[4]]],37],[[[5,[4]]],37],[[[5,[4]]],37],[[[5,[4]]],37],0,0,[[18,[16,[4]]],18],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,53],[35,53],[[1,[16,[4]]],1],0,[[20,63],20],0,[[1,[16,[4]]],1],[[9,[16,[4]]],9],0,0,0,[[9,64],9],[[9,52],9],0,[[46,35,[5,[4]],[5,[4]]],[[16,[4]]]],[[],18],[[],20],[[],15],[[],11],[[],13],[[],24],[[],1],[[],9],[[],14],[[],29],[[],31],[[],3],[[],33],[[65,[16,[4]],[16,[4]],[16,[4]]],9],[[65,[16,[4]],[16,[4]]],9],[[65,[16,[4]],53],9],[[],9],[[[16,[4]]],9],[[18,43],18],0,0,[[18,[16,[4]]],18],[[20,[16,[4]]],20],0,0,[[9,66,36],9],0,[[38,38],[[67,[48]]]],[[[8,[40]],[8,[40]]],[[67,[48]]]],[[[42,[[0,[40,41]]]],[42,[[0,[40,41]]]]],[[67,[48]]]],[[1,[16,[4]]],1],0,[[15,19],15],[[15,19],15],[[14,[16,[4]]],14],[[29,[16,[4]]],29],[[3,[16,[4]]],3],[[33,[16,[4]]],33],0,0,0,0,[[20,26],20],[[11,26],11],[[13,26],13],[[24,26],24],[[14,26],14],[[29,26],29],[[31,26],31],[[3,26],3],[[33,26],33],0,0,0,0,0,0,0,0,0,0,0,0,0,[[47,35,[67,[35]],[5,[4]],[5,[4]]],[[16,[4]]]],[[31,[16,[4]]],31],[[33,[16,[4]]],33],0,0,0,[[15,21],15],[[14,[16,[4]]],14],[[29,[16,[4]]],29],0,0,[[1,50,36],1],[[],[[37,[36]]]],[38,[[37,[36]]]],[[[8,[40]]],[[37,[36]]]],[[[42,[[0,[40,41]]]]],[[37,[36]]]],[19,[[37,[36]]]],[21,[[37,[36]]]],[22,[[37,[36]]]],[12,[[37,[36]]]],[23,[[37,[36]]]],[25,[[37,[36]]]],[26,[[37,[36]]]],[35,[[37,[36]]]],[45,[[37,[36]]]],[27,[[37,[36]]]],[28,[[37,[36]]]],[30,[[37,[36]]]],[2,[[37,[36]]]],[32,[[37,[36]]]],[34,[[37,[36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],50],[[],[[37,[[16,[4]]]]]],[[],[[37,[[16,[4]]]]]],[[],[[37,[[16,[4]]]]]],[[],[[37,[[16,[4]]]]]],[[3,2,[5,[4]],6],[[37,[3]]]],[[3,2,[5,[4]],[5,[4]],6],[[37,[3]]]],[[11,44,[5,[4]],[5,[4]],6],[[37,[11]]]],[[13,[5,[4]],[5,[4]],6],[[37,[13]]]],[[24,[5,[4]],[5,[4]],6],[[37,[24]]]],[[33,[5,[4]],[5,[4]],6],[[37,[33]]]],[[33,[5,[4]],6],[[37,[33]]]],[[14,[5,[4]],6],[[37,[14]]]],[[29,[5,[4]],6],[[37,[29]]]],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[11,26],11],[[13,26],13],[[24,26],24],[[14,26],14],[[29,26],29],[[31,26],31],[[3,26],3],[[33,26],33],0,0,0,0,0,0,0,0,[[1,66,36],1],[[32,70,[5,[4]],[5,[4]],6],37],[[34,[5,[4]],[5,[4]],6],37],[[32,70,[5,[4]],6],37],[[34,[5,[4]],6],37],[[28,[5,[4]],6],37],[[30,[5,[4]],6],37],0,0,0,0,0,0,[[71,50],71],0,[[]],[[]],[[]],[[]],[[]],[[]],[71,72],[[71,73,36],71],[74,74],[72,72],[[]],[[]],[[71,[16,[4]]],71],0,[[],72],[[],71],[[74,74],53],[[72,72],53],[[71,74],71],0,[[74,56],57],[[72,56],57],[[]],[[]],[[]],[36,[[68,[74,55]]]],[36,[[68,[72,55]]]],[[]],[[]],[[]],[[71,74],71],0,[[71,50],71],0,[[],71],[[71,74],71],0,[[71,66,36],71],0,[[71,50],71],0,[[71,50,36],71],[74,[[68,[36,55]]]],[72,[[68,[36,55]]]],[[]],[[]],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],69],[[],69],[[],69],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[75,75],[17,17],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[64,64],[65,65],[10,10],[83,83],[49,49],[73,73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,7],48],[[75,75],48],[[17,17],48],[[76,76],48],[[77,77],48],[[78,78],48],[[79,79],48],[[80,80],48],[[81,81],48],[[82,82],48],[[64,64],48],[[65,65],48],[[10,10],48],[[83,83],48],[[49,49],48],[[73,73],48],[[7,7],53],[[75,75],53],[[17,17],53],[[76,76],53],[[77,77],53],[[78,78],53],[[79,79],53],[[80,80],53],[[81,81],53],[[82,82],53],[[64,64],53],[[65,65],53],[[10,10],53],[[83,83],53],[[49,49],53],[[73,73],53],[[7,56],57],[[75,56],57],[[17,56],57],[[76,56],57],[[77,56],57],[[78,56],57],[[79,56],57],[[80,56],57],[[81,56],57],[[82,56],57],[[64,56],57],[[65,56],57],[[10,56],57],[[83,56],57],[[49,56],57],[[73,56],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,67],[66,[[67,[7]]]],[66,[[67,[75]]]],[66,[[67,[17]]]],[66,[[67,[76]]]],[66,[[67,[77]]]],[66,[[67,[78]]]],[66,[[67,[79]]]],[66,[[67,[80]]]],[66,[[67,[81]]]],[66,[[67,[82]]]],[66,[[67,[64]]]],[66,[[67,[65]]]],[66,[[67,[10]]]],[66,[[67,[83]]]],[66,[[67,[49]]]],[66,[[67,[73]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,53],[66,53],[66,53],[66,53],[66,53],[[7,7],[[67,[48]]]],[[75,75],[[67,[48]]]],[[17,17],[[67,[48]]]],[[76,76],[[67,[48]]]],[[77,77],[[67,[48]]]],[[78,78],[[67,[48]]]],[[79,79],[[67,[48]]]],[[80,80],[[67,[48]]]],[[81,81],[[67,[48]]]],[[82,82],[[67,[48]]]],[[64,64],[[67,[48]]]],[[65,65],[[67,[48]]]],[[10,10],[[67,[48]]]],[[83,83],[[67,[48]]]],[[49,49],[[67,[48]]]],[[73,73],[[67,[48]]]],[[],66],[7,66],[75,66],[17,66],[76,66],[77,66],[78,66],[79,66],[80,66],[81,66],[82,66],[64,66],[65,66],[10,66],[83,66],[49,66],[73,66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69]],"c":[],"p":[[3,"HeaderBuilder"],[3,"CoseSignature"],[3,"CoseSignBuilder"],[15,"u8"],[15,"slice"],[8,"FnOnce"],[4,"HeaderParameter"],[4,"RegisteredLabel"],[3,"CoseKeyBuilder"],[4,"KeyOperation"],[3,"CoseRecipientBuilder"],[3,"CoseRecipient"],[3,"CoseEncryptBuilder"],[3,"CoseMacBuilder"],[3,"CoseKdfContextBuilder"],[3,"Vec"],[4,"Algorithm"],[3,"PartyInfoBuilder"],[3,"PartyInfo"],[3,"SuppPubInfoBuilder"],[3,"SuppPubInfo"],[3,"CoseKdfContext"],[3,"CoseEncrypt"],[3,"CoseEncrypt0Builder"],[3,"CoseEncrypt0"],[3,"Header"],[3,"CoseKey"],[3,"CoseMac"],[3,"CoseMac0Builder"],[3,"CoseMac0"],[3,"CoseSignatureBuilder"],[3,"CoseSign"],[3,"CoseSign1Builder"],[3,"CoseSign1"],[3,"ProtectedHeader"],[4,"Value"],[6,"Result"],[4,"Label"],[8,"Clone"],[8,"EnumI64"],[8,"WithPrivateRange"],[4,"RegisteredLabelWithPrivate"],[4,"Nonce"],[4,"EncryptionContext"],[3,"CoseKeySet"],[4,"MacContext"],[4,"SignatureContext"],[4,"Ordering"],[4,"CoapContentFormat"],[3,"String"],[6,"Algorithm"],[6,"KeyType"],[15,"bool"],[8,"PartialEq"],[4,"CoseError"],[3,"Formatter"],[6,"Result"],[3,"EndOfFile"],[8,"Debug"],[3,"TryFromIntError"],[4,"Error"],[4,"Error"],[15,"u64"],[4,"KeyType"],[4,"EllipticCurve"],[15,"i64"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"usize"],[3,"ClaimsSetBuilder"],[3,"ClaimsSet"],[4,"CwtClaimName"],[4,"Timestamp"],[4,"HeaderAlgorithmParameter"],[4,"KeyParameter"],[4,"OkpKeyParameter"],[4,"Ec2KeyParameter"],[4,"RsaKeyParameter"],[4,"SymmetricKeyParameter"],[4,"HssLmsKeyParameter"],[4,"WalnutDsaKeyParameter"],[4,"CborTag"],[8,"TaggedCborSerializable"],[8,"AsCborValue"],[8,"CborSerializable"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
